---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.name: postgresql
  name: postgresql
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.name: postgresql
  name: postgresql
spec:
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: tcp-5432
  selector:
    app.name: postgresql
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.name: postgresql
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app.name: postgresql
  template:
    metadata:
      labels:
        app.name: postgresql
    spec:
      serviceAccountName: postgresql
      containers:
        - name: postgresql
          image: postgres:alpine
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: "0.25"
              memory: "128Mi"
            requests:
              cpu: "0.25"
              memory: "128Mi"
          env:
            - name: POSTGRES_USERNAME
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgrespw
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
      volumes:
        - name: init-scripts
          configMap:
            name: postgres-init-scripts
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
data:
  init.sql: |
    CREATE TABLE "user"
    (
        id       SERIAL PRIMARY KEY,
        username VARCHAR(255) NOT NULL,
        password VARCHAR(255) NOT NULL,
        salt     VARCHAR(255) NOT NULL,
        ip       VARCHAR(255) NOT NULL
    );